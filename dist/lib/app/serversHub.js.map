{"version":3,"sources":["../../../src/lib/app/serversHub.js"],"names":["serverTypes","http","ws","ServersHub","servers","add","bind","getServer","getAll","remove","rename","cfg","WebServerConstructor","type","id","webServer","server","name","push","find","concat","Promise","resolve","reject","index","findIndex","then","stop","splice","state","forEach","s","behaviours","behaviour","codex","addBehaviour","serversStoppingPromises","isLive","all","length","setState"],"mappings":"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","file":"serversHub.js","sourcesContent":["import unique from 'cuid';\nimport HttpWebServer from './webServers/http/HttpWebServer';\nimport WsWebServer from './webServers/ws/WsWebServer';\nimport eventBus from './eventLog';\n\nconst serverTypes = {\n  http: HttpWebServer,\n  ws: WsWebServer\n};\n\nclass ServersHub {\n  constructor() {\n    this.servers = [];\n    this.add = this.add.bind(this);\n    this.getServer = this.getServer.bind(this);\n    this.getAll = this.getAll.bind(this);\n    this.remove = this.remove.bind(this);\n    this.rename = this.rename.bind(this);\n  }\n\n  add(cfg) {\n    const WebServerConstructor = serverTypes[cfg.type];\n    const id = unique();\n    const webServer = new WebServerConstructor(id, cfg, eventBus);\n    const server = {\n      id,\n      name: cfg.name,\n      type: cfg.type,\n      webServer\n    };\n    this.servers.push(server);\n    return server;\n  }\n\n  getServer(id) {\n    return this.servers.find(server => server.id === id);\n  }\n\n  getAll() {\n    return [].concat(this.servers);\n  }\n\n  remove(id) {\n    return new Promise((resolve, reject) => {\n      const index = this.servers.findIndex(server => server.id === id);\n\n      if (index < 0) {\n        reject(false);\n      }\n\n      resolve(index);\n    })\n      .then((index) => {\n        const server = this.servers[index];\n\n        return server.webServer\n          .stop()\n          .then(() => {\n            this.servers.splice(index, 1);\n            return true;\n          });\n      });\n  }\n\n  rename(id, name) {\n    const server = this.getServer(id);\n\n    if (server) {\n      server.rename(name);\n      return Promise.resolve();\n    }\n\n    return Promise.reject();\n  }\n\n  getServers() {\n    return this.servers;\n  }\n\n  setState(state) {\n    state.forEach((s) => {\n      const server = this.add(s);\n      s.behaviours.forEach((behaviour) => {\n        server.webServer.codex.addBehaviour(behaviour);\n      });\n    });\n  }\n\n  import(state) {\n    const serversStoppingPromises = [];\n\n    this.servers.forEach((server) => {\n      if (server.webServer.isLive()) {\n        serversStoppingPromises.push(server.webServer.stop());\n      }\n    });\n\n    return Promise.all(serversStoppingPromises).then(() => {\n      this.servers.length = 0;\n      this.setState(state);\n    });\n  }\n}\n\nexport default new ServersHub();\n"]}