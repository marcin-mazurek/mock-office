{"version":3,"sources":["../../../../src/lib/app/codex/Codex.js"],"names":["Codex","serverId","behaviours","addBehaviour","bind","removeBehaviour","matchBehaviour","id","find","b","behaviourCfg","behaviour","push","behaviourId","behaviourIndex","findIndex","splice","event","ajv","type","validate","params"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;IAEqBA,K;AACnB,iBAAYC,QAAZ,EAAsB;AAAA;;AACpB,SAAKA,QAAL,GAAgBA,QAAhB;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBD,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKE,cAAL,GAAsB,KAAKA,cAAL,CAAoBF,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAED;;;;;iCACaG,E,EAAI;AACf,aAAO,KAAKL,UAAL,CAAgBM,IAAhB,CAAqB;AAAA,eAAKC,EAAEF,EAAF,KAASA,EAAd;AAAA,OAArB,CAAP;AACD;;AAED;;;;iCACaG,Y,EAAc;AACzB,UAAMC,YAAY,wBAAc,KAAKV,QAAnB,EAA6BS,YAA7B,CAAlB;AACA,WAAKR,UAAL,CAAgBU,IAAhB,CAAqBD,SAArB;AACA,aAAOA,SAAP;AACD;;AAED;;;;oCACgBE,W,EAAa;AAC3B,UAAMC,iBAAiB,KAAKZ,UAAL,CAAgBa,SAAhB,CAA0B;AAAA,eAAKN,EAAEF,EAAF,KAASM,WAAd;AAAA,OAA1B,CAAvB;;AAEA,UAAIC,iBAAiB,CAArB,EAAwB;AACtB,eAAO,KAAP;AACD;;AAED,WAAKZ,UAAL,CAAgBc,MAAhB,CAAuBF,cAAvB,EAAuC,CAAvC;;AAEA,aAAO,IAAP;AACD;;AAED;;;;mCACeG,K,EAAO;AACpB,UAAMC,MAAM,mBAAZ;;AAEA,UAAMP,YAAY,KAAKT,UAAL,CAAgBM,IAAhB,CAAqB,UAACC,CAAD,EAAO;AAC5C,YAAI,CAACA,EAAEQ,KAAP,EAAc;AACZ,iBAAO,IAAP;AACD;;AAED,YAAI,CAACA,KAAL,EAAY;AACV,iBAAO,KAAP;AACD;;AAED,YAAIR,EAAEQ,KAAF,CAAQE,IAAR,KAAiBF,MAAME,IAA3B,EAAiC;AAC/B,iBAAO,KAAP;AACD;;AAED,eAAOD,IAAIE,QAAJ,CAAaX,EAAEQ,KAAF,CAAQI,MAArB,EAA6BJ,MAAMI,MAAnC,CAAP;AACD,OAdiB,CAAlB;AAeA,aAAOV,SAAP;AACD;;;;;;kBAtDkBX,K","file":"Codex.js","sourcesContent":["import Ajv from 'ajv';\nimport Behaviour from './Behaviour';\n\nexport default class Codex {\n  constructor(serverId) {\n    this.serverId = serverId;\n    this.behaviours = [];\n    this.addBehaviour = this.addBehaviour.bind(this);\n    this.removeBehaviour = this.removeBehaviour.bind(this);\n    this.matchBehaviour = this.matchBehaviour.bind(this);\n  }\n\n  // getBehaviour :: String -> Behaviour\n  getBehaviour(id) {\n    return this.behaviours.find(b => b.id === id);\n  }\n\n  // addBehaviour :: Object -> Behaviour\n  addBehaviour(behaviourCfg) {\n    const behaviour = new Behaviour(this.serverId, behaviourCfg);\n    this.behaviours.push(behaviour);\n    return behaviour;\n  }\n\n  // removeBehaviour :: String -> Boolean\n  removeBehaviour(behaviourId) {\n    const behaviourIndex = this.behaviours.findIndex(b => b.id === behaviourId);\n\n    if (behaviourIndex < 0) {\n      return false;\n    }\n\n    this.behaviours.splice(behaviourIndex, 1);\n\n    return true;\n  }\n\n  // matchBehaviour :: Object -> Behaviour\n  matchBehaviour(event) {\n    const ajv = new Ajv();\n\n    const behaviour = this.behaviours.find((b) => {\n      if (!b.event) {\n        return true;\n      }\n\n      if (!event) {\n        return false;\n      }\n\n      if (b.event.type !== event.type) {\n        return false;\n      }\n\n      return ajv.validate(b.event.params, event.params);\n    });\n    return behaviour;\n  }\n}\n"]}