{"version":3,"sources":["../../../../src/lib/app/codex/Reaction.js"],"names":["Reaction","behaviourId","config","id","schedule","params","type","status","success","schedule$","interval","of","delay","observeOn","async","queue","statuses","PENDING","reactionId","subscription","do","doCommand","subscribe","complete","FINISHED","unsubscribe","CANCELLED","INACTIVE"],"mappings":";;;;;;;;AAAA;;;;AACA;;AACA;;;;;;IAEqBA,Q;AACnB,oBAAYC,WAAZ,EAAyBC,MAAzB,EAAiC;AAAA;;AAC/B,SAAKC,EAAL,GAAU,qBAAV;AACA,SAAKF,WAAL,GAAmBA,WAAnB;AACA,SAAKG,QAAL,GAAgBF,OAAOE,QAAP,IAAmB,EAAnC;AACA,SAAKC,MAAL,GAAcH,OAAOG,MAAP,IAAiB,EAA/B;AACA,SAAKC,IAAL,GAAYJ,OAAOI,IAAnB;AACA,SAAKC,MAAL,GAAc,UAAd;AACD;;AAED;;;;;4BACQC,O,EAAS;AAAA;;AACf,UAAIC,YAAY,KAAKL,QAAL,CAAcM,QAAd,GACZ,iBAAWA,QAAX,CAAoB,KAAKN,QAAL,CAAcM,QAAlC,CADY,GAEZ,iBAAWC,EAAX,CAAc,CAAd,CAFJ;;AAIAF,kBAAY,KAAKL,QAAL,CAAcQ,KAAd,GACVH,UAAUI,SAAV,CAAoB,gBAAUC,KAA9B,EAAqC,KAAKV,QAAL,CAAcQ,KAAnD,CADU,GAEVH,UAAUI,SAAV,CAAoB,gBAAUE,KAA9B,CAFF;;AAIA,WAAKR,MAAL,GAAcP,SAASgB,QAAT,CAAkBC,OAAhC;;AAEA,yBAAI,yBAAJ,EACE;AACEV,gBAAQP,SAASgB,QAAT,CAAkBC,OAD5B;AAEEC,oBAAY,KAAKf,EAFnB;AAGEF,qBAAa,KAAKA;AAHpB,OADF;;AAQA,UAAMkB,eAAeV,UAClBW,EADkB,CACf,YAAM;AACR,cAAKC,SAAL;AACD,OAHkB,EAIlBC,SAJkB,CAIR;AACTC,kBAAU,oBAAM;AACd,cAAIf,OAAJ,EAAa;AACXA;AACD;;AAED,gBAAKD,MAAL,GAAcP,SAASgB,QAAT,CAAkBQ,QAAhC;;AAEA,6BAAI,yBAAJ,EACE;AACEjB,oBAAQP,SAASgB,QAAT,CAAkBQ,QAD5B;AAEEN,wBAAY,MAAKf,EAFnB;AAGEF,yBAAa,MAAKA;AAHpB,WADF;AAOD;AAfQ,OAJQ,CAArB;;AAsBA,aAAO,YAAM;AACXkB,qBAAaM,WAAb;;AAEA,cAAKlB,MAAL,GAAcP,SAASgB,QAAT,CAAkBU,SAAhC;;AAEA,2BAAI,yBAAJ,EACE;AACEnB,kBAAQP,SAASgB,QAAT,CAAkBU,SAD5B;AAEER,sBAAY,MAAKf,EAFnB;AAGEF,uBAAa,MAAKA;AAHpB,SADF;AAOD,OAZD;AAaD;;AAED;AACA;AACA;;;;gCACY,CAAE;AACd;;;;;;;kBAvEmBD,Q;;;AA0ErBA,SAASgB,QAAT,GAAoB;AAClBW,YAAU,UADQ;AAElBV,WAAS,SAFS;AAGlBO,YAAU,UAHQ;AAIlBE,aAAW;AAJO,CAApB","file":"Reaction.js","sourcesContent":["import unique from 'cuid';\nimport { Observable, Scheduler } from 'rxjs';\nimport { log } from '../eventLog';\n\nexport default class Reaction {\n  constructor(behaviourId, config) {\n    this.id = unique();\n    this.behaviourId = behaviourId;\n    this.schedule = config.schedule || {};\n    this.params = config.params || {};\n    this.type = config.type;\n    this.status = 'inactive';\n  }\n\n  // execute :: void -> Function\n  execute(success) {\n    let schedule$ = this.schedule.interval\n      ? Observable.interval(this.schedule.interval)\n      : Observable.of(1);\n\n    schedule$ = this.schedule.delay\n    ? schedule$.observeOn(Scheduler.async, this.schedule.delay)\n    : schedule$.observeOn(Scheduler.queue);\n\n    this.status = Reaction.statuses.PENDING;\n\n    log('reaction-status-changed',\n      {\n        status: Reaction.statuses.PENDING,\n        reactionId: this.id,\n        behaviourId: this.behaviourId\n      }\n    );\n\n    const subscription = schedule$\n      .do(() => {\n        this.doCommand();\n      })\n      .subscribe({\n        complete: () => {\n          if (success) {\n            success();\n          }\n\n          this.status = Reaction.statuses.FINISHED;\n\n          log('reaction-status-changed',\n            {\n              status: Reaction.statuses.FINISHED,\n              reactionId: this.id,\n              behaviourId: this.behaviourId\n            }\n          );\n        }\n      });\n\n    return () => {\n      subscription.unsubscribe();\n\n      this.status = Reaction.statuses.CANCELLED;\n\n      log('reaction-status-changed',\n        {\n          status: Reaction.statuses.CANCELLED,\n          reactionId: this.id,\n          behaviourId: this.behaviourId\n        }\n      );\n    };\n  }\n\n  /* eslint-disable class-methods-use-this */\n  // To implement by subclasses\n  // action :: void -> void\n  doCommand() {}\n  /* eslint-enable class-methods-use-this */\n}\n\nReaction.statuses = {\n  INACTIVE: 'inactive',\n  PENDING: 'pending',\n  FINISHED: 'finished',\n  CANCELLED: 'cancelled'\n};\n"]}