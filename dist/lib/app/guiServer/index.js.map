{"version":3,"sources":["../../../../src/lib/app/guiServer/index.js"],"names":["configureGuiEventsServer","serveGuiEventsServer","createGuiServer","serveGuiServer","GUI_EVENTS_SERVER_PORT","httpServer","createServer","server","sockets","broadcast","event","args","forEach","socket","send","JSON","stringify","Object","assign","on","ws","push","filter","port","listen","console","log","green","staticAssetsMiddleware","req","res","sendFile","resolve","__dirname","originalUrl","reactAppMiddleware","app","use","guiEventsServer"],"mappings":";;;;;QAUgBA,wB,GAAAA,wB;QA2BAC,oB,GAAAA,oB;QAOAC,e,GAAAA,e;QAaAC,c,GAAAA,c;;AAzDhB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;;;;;AAEA,IAAMC,yBAAyB,IAA/B;;AAEO,SAASJ,wBAAT,GAAoC;AACzC,MAAMK,aAAa,eAAKC,YAAL,EAAnB;AACA,MAAMC,SAAS,eAAoB,EAAEA,QAAQF,UAAV,EAApB,CAAf;AACA,MAAIG,UAAU,EAAd;;AAEA,WAASC,SAAT,CAAmBC,KAAnB,EAA0BC,IAA1B,EAAgC;AAC9BH,YAAQI,OAAR,CACE;AAAA,aAAUC,OAAOC,IAAP,CAAYC,KAAKC,SAAL,CAAeC,OAAOC,MAAP,CAAc,EAAER,YAAF,EAAd,EAAyBC,IAAzB,CAAf,CAAZ,CAAV;AAAA,KADF;AAGD;;AAEDJ,SAAOY,EAAP,CAAU,YAAV,EAAwB,UAACC,EAAD,EAAQ;AAC9BZ,YAAQa,IAAR,CAAaD,EAAb;;AAEAA,OAAGD,EAAH,CAAM,OAAN,EAAe,YAAM;AACnBX,gBAAUA,QAAQc,MAAR,CAAe;AAAA,eAAUT,WAAWO,EAArB;AAAA,OAAf,CAAV;AACD,KAFD;AAGD,GAND;AAOA,oBAAG,yBAAH,EAA8B;AAAA,WAAQX,UAAU,yBAAV,EAAqCE,IAArC,CAAR;AAAA,GAA9B;AACA,oBAAG,wBAAH,EAA6B;AAAA,WAAQF,UAAU,wBAAV,EAAoCE,IAApC,CAAR;AAAA,GAA7B;;AAEA,SAAO;AACLJ,YAAQF,UADH;AAELI;AAFK,GAAP;AAID;;AAEM,SAASR,oBAAT,CAA8BM,MAA9B,EAAsCgB,IAAtC,EAA4C;AACjDhB,SAAOiB,MAAP,CAAcD,IAAd,EAAoB,YAAM;AACxB;AACAE,YAAQC,GAAR,CAAY,eAAOC,KAAP,yCAAmDJ,IAAnD,CAAZ;AACD,GAHD;AAID;;AAEM,SAASrB,eAAT,GAA2B;AAChC,MAAM0B,yBAAyB,SAAzBA,sBAAyB,CAACC,GAAD,EAAMC,GAAN,EAAc;AAC3CA,QAAIC,QAAJ,CAAa,eAAKC,OAAL,CAAaC,SAAb,iBAAqCJ,IAAIK,WAAzC,CAAb;AACD,GAFD;AAGA,MAAMC,qBAAqB,SAArBA,kBAAqB,CAACN,GAAD,EAAMC,GAAN,EAAc;AACvCA,QAAIC,QAAJ,CAAa,eAAKC,OAAL,CAAaC,SAAb,EAAwB,sBAAxB,CAAb;AACD,GAFD;AAGA,MAAMG,MAAM,wBAAZ;AACAA,MAAIC,GAAJ,CAAQ,WAAR,EAAqBT,sBAArB;AACAQ,MAAIC,GAAJ,CAAQ,GAAR,EAAaF,kBAAb;AACA,SAAOC,GAAP;AACD;;AAEM,SAASjC,cAAT,CAAwBoB,IAAxB,EAA8B;AACnCrB,oBAAkBsB,MAAlB,CAAyBD,IAAzB,EAA+B,YAAM;AACnC;AACAE,YAAQC,GAAR,CAAY,eAAOC,KAAP,oCAA8CJ,IAA9C,CAAZ;AACD,GAHD;AAIA,MAAMe,kBAAkBtC,8CAAxB;AACAC,uBAAqBqC,gBAAgB/B,MAArC,EAA6CH,sBAA7C;AACD","file":"index.js","sourcesContent":["import express from 'express';\nimport path from 'path';\nimport colors from 'colors/safe';\nimport http from 'http';\nimport { Server as WebSocketServer } from 'ws';\nimport { on } from '../eventLog';\nimport serversHub from '../serversHub';\n\nconst GUI_EVENTS_SERVER_PORT = 3061;\n\nexport function configureGuiEventsServer() {\n  const httpServer = http.createServer();\n  const server = new WebSocketServer({ server: httpServer });\n  let sockets = [];\n\n  function broadcast(event, args) {\n    sockets.forEach(\n      socket => socket.send(JSON.stringify(Object.assign({ event }, args)))\n    );\n  }\n\n  server.on('connection', (ws) => {\n    sockets.push(ws);\n\n    ws.on('close', () => {\n      sockets = sockets.filter(socket => socket !== ws);\n    });\n  });\n  on('behaviour-status-change', args => broadcast('behaviour-status-change', args));\n  on('reaction-status-change', args => broadcast('reaction-status-change', args));\n\n  return {\n    server: httpServer,\n    broadcast\n  };\n}\n\nexport function serveGuiEventsServer(server, port) {\n  server.listen(port, () => {\n    // eslint-disable-next-line no-console\n    console.log(colors.green(`GUI events address: ws://127.0.0.1:${port}`));\n  });\n}\n\nexport function createGuiServer() {\n  const staticAssetsMiddleware = (req, res) => {\n    res.sendFile(path.resolve(__dirname, `../../gui/${req.originalUrl}`));\n  };\n  const reactAppMiddleware = (req, res) => {\n    res.sendFile(path.resolve(__dirname, '../../gui/index.html'));\n  };\n  const app = express();\n  app.use('/static/*', staticAssetsMiddleware);\n  app.use('*', reactAppMiddleware);\n  return app;\n}\n\nexport function serveGuiServer(port) {\n  createGuiServer().listen(port, () => {\n    // eslint-disable-next-line no-console\n    console.log(colors.green(`GUI address: http://127.0.0.1:${port}`));\n  });\n  const guiEventsServer = configureGuiEventsServer(serversHub);\n  serveGuiEventsServer(guiEventsServer.server, GUI_EVENTS_SERVER_PORT);\n}\n"]}