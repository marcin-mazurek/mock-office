{"version":3,"sources":["../../../../../src/lib/app/webServers/http/HttpServerCodex.js"],"names":["defaultEvent","type","defaultReaction","HttpServerCodex","serverId","addBehaviour","bind","behaviourCfg","behaviour","cfg","event","reactions","map","r","Error","behaviours","push"],"mappings":";;;;;;;;AAAA;;AACA;;;;AACA;;;;;;;;;;;;AAEA,IAAMA,eAAe;AACnBC,QAAM;AADa,CAArB;;AAIA,IAAMC,kBAAkB;AACtBD,QAAM;AADgB,CAAxB;;IAIqBE,e;;;AACnB,2BAAYC,QAAZ,EAAsB;AAAA;;AAAA,kIACdA,QADc;;AAEpB,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,OAApB;AAFoB;AAGrB;;AAED;;;;;iCACaC,Y,EAAc;AACzB,UAAIC,kBAAJ;AACA,UAAMC,MAAM,2BAAe,EAAEC,OAAOV,YAAT,EAAf,EAAwCO,YAAxC,CAAZ;AACAE,UAAIE,SAAJ,GAAgBF,IAAIE,SAAJ,CAAcC,GAAd,CAAkB;AAAA,eAAK,2BAAeV,eAAf,EAAgCW,CAAhC,CAAL;AAAA,OAAlB,CAAhB;;AAEA,cAAQJ,IAAIC,KAAJ,CAAUT,IAAlB;AACE,aAAK,SAAL;AAAgB;AACdO,wBAAY,+BAAqB,KAAKJ,QAA1B,EAAoCK,GAApC,CAAZ;AACA;AACD;AACD;AAAS;AACP,kBAAM,IAAIK,KAAJ,CAAU,8BAAV,CAAN;AACD;AAPH;;AAUA,WAAKC,UAAL,CAAgBC,IAAhB,CAAqBR,SAArB;AACA,aAAOA,SAAP;AACD;;;;;;kBAxBkBL,e","file":"HttpServerCodex.js","sourcesContent":["import { mergeDeepRight } from 'ramda';\nimport RequestBehaviour from './RequestBehaviour';\nimport Codex from '../../codex';\n\nconst defaultEvent = {\n  type: 'request'\n};\n\nconst defaultReaction = {\n  type: 'response'\n};\n\nexport default class HttpServerCodex extends Codex {\n  constructor(serverId) {\n    super(serverId);\n    this.addBehaviour = this.addBehaviour.bind(this);\n  }\n\n  // addBehaviour :: Object -> Behaviour\n  addBehaviour(behaviourCfg) {\n    let behaviour;\n    const cfg = mergeDeepRight({ event: defaultEvent }, behaviourCfg);\n    cfg.reactions = cfg.reactions.map(r => mergeDeepRight(defaultReaction, r));\n\n    switch (cfg.event.type) {\n      case 'request': {\n        behaviour = new RequestBehaviour(this.serverId, cfg);\n        break;\n      }\n      default: {\n        throw new Error('Invalid behaviour event type');\n      }\n    }\n\n    this.behaviours.push(behaviour);\n    return behaviour;\n  }\n}\n"]}