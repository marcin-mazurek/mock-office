{"version":3,"sources":["../../../../../src/lib/app/appServer/middlewares/addBehaviourMiddleware.js"],"names":["addBehaviourMiddleware","schema","properties","serverId","type","behaviour","event","required","reactions","items","req","res","validate","body","status","json","error","errors","dataPath","message","server","getServer","webServer","codex","addBehaviour"],"mappings":";;;;;kBAwCwBA,sB;;AAxCxB;;;;AACA;;AACA;;;;;;AAEA,IAAMC,SAAS;AACbC,cAAY;AACVC,cAAU;AACRC,YAAM;AADE,KADA;AAIVC,eAAW;AACTD,YAAM,QADG;AAETF,kBAAY;AACVI,eAAO;AACLF,gBAAM,QADD;AAELF,sBAAY;AACVE,kBAAM;AACJA,oBAAM;AADF;AADI,WAFP;AAOLG,oBAAU,CAAC,MAAD;AAPL,SADG;AAUVC,mBAAW;AACTJ,gBAAM,OADG;AAETK,iBAAO;AACLL,kBAAM,QADD;AAELF,wBAAY;AACVE,oBAAM;AACJA,sBAAM;AADF;AADI,aAFP;AAOLG,sBAAU,CAAC,MAAD;AAPL;AAFE;AAVD,OAFH;AAyBTA,gBAAU,CAAC,WAAD,EAAc,OAAd;AAzBD;AAJD,GADC;AAiCbA,YAAU,CAAC,UAAD,EAAa,WAAb;AAjCG,CAAf;;AAoCe,SAASP,sBAAT,CAAgCU,GAAhC,EAAqCC,GAArC,EAA0C;AACvD,MAAI,CAAC,cAAIC,QAAJ,CAAaX,MAAb,EAAqBS,IAAIG,IAAzB,CAAL,EAAqC;AACnCF,QAAIG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAU,cAAIC,MAAJ,CAAW,CAAX,EAAcC,QAAxB,SAAoC,cAAID,MAAJ,CAAW,CAAX,EAAcE,OAApD,EAArB;AACA;AACD;;AAED,MAAI;AACF,QAAMC,SAAS,qBAAWC,SAAX,CAAqBX,IAAIG,IAAJ,CAASV,QAA9B,CAAf;;AAEA,QAAI,CAACiB,MAAL,EAAa;AACXT,UAAIG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,mBAAT,EAArB;AACA;AACD;;AAED,QAAMX,YAAYe,OAAOE,SAAP,CAAiBC,KAAjB,CAAuBC,YAAvB,CAAoCd,IAAIG,IAAJ,CAASR,SAA7C,CAAlB;AACAM,QAAIG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,uCAAoBV,SAApB,CAArB;AACD,GAVD,CAUE,OAAOW,KAAP,EAAc;AACdL,QAAIG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAOA,MAAMG,OAAf,EAArB;AACD;AACF","file":"addBehaviourMiddleware.js","sourcesContent":["import serversHub from '../../serversHub';\nimport { behaviourToResponse } from './transformers';\nimport ajv from '../ajv';\n\nconst schema = {\n  properties: {\n    serverId: {\n      type: 'string'\n    },\n    behaviour: {\n      type: 'object',\n      properties: {\n        event: {\n          type: 'object',\n          properties: {\n            type: {\n              type: 'string'\n            }\n          },\n          required: ['type']\n        },\n        reactions: {\n          type: 'array',\n          items: {\n            type: 'object',\n            properties: {\n              type: {\n                type: 'string'\n              }\n            },\n            required: ['type']\n          }\n        }\n      },\n      required: ['reactions', 'event']\n    }\n  },\n  required: ['serverId', 'behaviour']\n};\n\nexport default function addBehaviourMiddleware(req, res) {\n  if (!ajv.validate(schema, req.body)) {\n    res.status(400).json({ error: `${ajv.errors[0].dataPath} ${ajv.errors[0].message}` });\n    return;\n  }\n\n  try {\n    const server = serversHub.getServer(req.body.serverId);\n\n    if (!server) {\n      res.status(400).json({ error: 'Server not found.' });\n      return;\n    }\n\n    const behaviour = server.webServer.codex.addBehaviour(req.body.behaviour);\n    res.status(200).json(behaviourToResponse(behaviour));\n  } catch (error) {\n    res.status(500).json({ error: error.message });\n  }\n}\n"]}