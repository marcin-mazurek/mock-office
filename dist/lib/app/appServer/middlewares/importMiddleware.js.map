{"version":3,"sources":["../../../../../src/lib/app/appServer/middlewares/importMiddleware.js"],"names":["importMiddleware","schema","type","items","properties","behaviours","event","required","reactions","req","res","validate","body","status","json","error","errors","dataPath","message","import","then","getServers","map"],"mappings":";;;;;kBA2CwBA,gB;;AA3CxB;;;;AACA;;AACA;;;;;;AAEA,IAAMC,SAAS;AACbC,QAAM,OADO;AAEbC,SAAO;AACLD,UAAM,QADD;AAELE,gBAAY;AACVC,kBAAY;AACVH,cAAM,OADI;AAEVC,eAAO;AACLD,gBAAM,QADD;AAELE,sBAAY;AACVE,mBAAO;AACLJ,oBAAM,QADD;AAELE,0BAAY;AACVF,sBAAM;AACJA,wBAAM;AADF;AADI,eAFP;AAOLK,wBAAU,CAAC,MAAD;AAPL,aADG;AAUVC,uBAAW;AACTN,oBAAM,OADG;AAETC,qBAAO;AACLD,sBAAM,QADD;AAELE,4BAAY;AACVF,wBAAM;AACJA,0BAAM;AADF;AADI,iBAFP;AAOLK,0BAAU,CAAC,MAAD;AAPL;AAFE;AAVD,WAFP;AAyBLA,oBAAU,CAAC,WAAD,EAAc,OAAd;AAzBL;AAFG;AADF;AAFP;AAFM,CAAf;;AAuCe,SAASP,gBAAT,CAA0BS,GAA1B,EAA+BC,GAA/B,EAAoC;AACjD,MAAI,CAAC,cAAIC,QAAJ,CAAaV,MAAb,EAAqBQ,IAAIG,IAAzB,CAAL,EAAqC;AACnCF,QAAIG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAU,cAAIC,MAAJ,CAAW,CAAX,EAAcC,QAAxB,SAAoC,cAAID,MAAJ,CAAW,CAAX,EAAcE,OAApD,EAArB;AACA;AACD;;AAED,uBAAWC,MAAX,CAAkBV,IAAIG,IAAtB,EAA4BQ,IAA5B,CAAiC,YAAM;AACrCV,QAAII,IAAJ,CAAS,qBAAWO,UAAX,GAAwBC,GAAxB,gCAAT;AACD,GAFD;AAGD","file":"importMiddleware.js","sourcesContent":["import serversHub from '../../serversHub';\nimport { serverToResponse } from './transformers';\nimport ajv from '../ajv';\n\nconst schema = {\n  type: 'array',\n  items: {\n    type: 'object',\n    properties: {\n      behaviours: {\n        type: 'array',\n        items: {\n          type: 'object',\n          properties: {\n            event: {\n              type: 'object',\n              properties: {\n                type: {\n                  type: 'string'\n                }\n              },\n              required: ['type']\n            },\n            reactions: {\n              type: 'array',\n              items: {\n                type: 'object',\n                properties: {\n                  type: {\n                    type: 'string'\n                  }\n                },\n                required: ['type']\n              }\n            }\n          },\n          required: ['reactions', 'event']\n        }\n      }\n    }\n  }\n};\n\nexport default function importMiddleware(req, res) {\n  if (!ajv.validate(schema, req.body)) {\n    res.status(400).json({ error: `${ajv.errors[0].dataPath} ${ajv.errors[0].message}` });\n    return;\n  }\n\n  serversHub.import(req.body).then(() => {\n    res.json(serversHub.getServers().map(serverToResponse));\n  });\n}\n"]}