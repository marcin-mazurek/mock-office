{"version":3,"sources":["../../../../src/lib/app/appServer/appServer.js"],"names":["persistentState","restore","createAppServer","app","use","post","json","get","serveAppServer","port","cb","listen","console","log","green"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,kBAAkB,yCAAxB;AACAA,gBAAgBC,OAAhB;;AAEO,IAAMC,4CAAkB,SAAlBA,eAAkB,GAAM;AACnC,MAAMC,MAAM,wBAAZ;AACAA,MAAIC,GAAJ,CAAQ,qBAAR;;AAEAD,MAAIE,IAAJ,CAAS,aAAT,EAAwB,qBAAWC,IAAX,EAAxB;AACAH,MAAIE,IAAJ,CAAS,gBAAT,EAA2B,qBAAWC,IAAX,EAA3B;AACAH,MAAIE,IAAJ,CAAS,eAAT,EAA0B,qBAAWC,IAAX,EAA1B;AACAH,MAAIE,IAAJ,CAAS,cAAT,EAAyB,qBAAWC,IAAX,EAAzB;AACAH,MAAIE,IAAJ,CAAS,cAAT,EAAyB,qBAAWC,IAAX,EAAzB;AACAH,MAAIE,IAAJ,CAAS,gBAAT,EAA2B,qBAAWC,IAAX,EAA3B;AACAH,MAAIE,IAAJ,CAAS,mBAAT,EAA8B,qBAAWC,IAAX,EAA9B;AACAH,MAAII,GAAJ,CAAQ,SAAR;AACAJ,MAAII,GAAJ,CAAQ,YAAR;AACAJ,MAAII,GAAJ,CAAQ,QAAR;AACAJ,MAAIE,IAAJ,CAAS,SAAT,EAAoB,qBAAWC,IAAX,EAApB;;AAEA,SAAOH,GAAP;AACD,CAjBM;;AAmBA,IAAMK,0CAAiB,SAAjBA,cAAiB,CAACC,IAAD,EAAOC,EAAP,EAAc;AAC1CR,oBAAkBS,MAAlB,CAAyBF,IAAzB,EAA+B,YAAM;AACnC;AACAG,YAAQC,GAAR,CAAY,eAAOC,KAAP,oCAA8CL,IAA9C,CAAZ;AACA,QAAI,OAAOC,EAAP,KAAc,UAAlB,EAA8B;AAC5BA;AACD;AACF,GAND;AAOD,CARM","file":"appServer.js","sourcesContent":["import express from 'express';\nimport bodyParser from 'body-parser';\nimport cors from 'cors';\nimport colors from 'colors/safe';\nimport addServerMiddleware from './middlewares/addServerMiddleware';\nimport removeServerMiddleware from './middlewares/removeServerMiddleware';\nimport startServerMiddleware from './middlewares/startServerMiddleware';\nimport stopServerMiddleware from './middlewares/stopServerMiddleware';\nimport editServerMiddleware from './middlewares/editServerMiddleware';\nimport addBehaviourMiddleware from './middlewares/addBehaviourMiddleware';\nimport removeBehaviourMiddleware from './middlewares/removeBehaviourMiddleware';\nimport exportMiddleware from './middlewares/exportMiddleware';\nimport getBehaviourMiddleware from './middlewares/getBehaviourMiddleware';\nimport configurePersistentState from './configurePersistentState';\nimport getStateMiddleware from './middlewares/getStateMiddleware';\nimport importMiddleware from './middlewares/importMiddleware';\n\nconst persistentState = configurePersistentState();\npersistentState.restore();\n\nexport const createAppServer = () => {\n  const app = express();\n  app.use(cors());\n\n  app.post('/add-server', bodyParser.json(), addServerMiddleware);\n  app.post('/remove-server', bodyParser.json(), removeServerMiddleware);\n  app.post('/start-server', bodyParser.json(), startServerMiddleware);\n  app.post('/stop-server', bodyParser.json(), stopServerMiddleware);\n  app.post('/edit-server', bodyParser.json(), editServerMiddleware);\n  app.post('/add-behaviour', bodyParser.json(), addBehaviourMiddleware);\n  app.post('/remove-behaviour', bodyParser.json(), removeBehaviourMiddleware);\n  app.get('/export', exportMiddleware);\n  app.get('/behaviour', getBehaviourMiddleware);\n  app.get('/state', getStateMiddleware);\n  app.post('/import', bodyParser.json(), importMiddleware);\n\n  return app;\n};\n\nexport const serveAppServer = (port, cb) => {\n  createAppServer().listen(port, () => {\n    // eslint-disable-next-line no-console\n    console.log(colors.green(`App address: http://127.0.0.1:${port}`));\n    if (typeof cb === 'function') {\n      cb();\n    }\n  });\n};\n"]}