// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EditServerForm default snapshot 1`] = `
<form
  action="#"
  className="form"
  onSubmit={[Function]}
>
  <div
    className="form__header"
  >
    <img
      alt=""
      className="form__header-icon"
      src=""
    />
    Edit server
  </div>
  <div
    className="form-row"
  >
    <div
      className="form__field"
    >
      <label
        className="form-field__label"
        htmlFor="server-name"
      >
        Name:
      </label>
      <Field
        className="form-field__input"
        component="input"
        name="name"
        type="text"
      />
    </div>
  </div>
  <div
    className="form-row"
  >
    <div
      className="form__col"
    >
      <div
        className="form__field"
      >
        <label
          className="form-field__label"
          htmlFor="server-port"
        >
          Port:
        </label>
        <Field
          className="form-field__input"
          component="input"
          name="port"
          type="number"
        />
      </div>
    </div>
  </div>
  <div
    className="form-row"
  >
    <button
      className="button form__button"
      type="submit"
    >
      Save
    </button>
    <Link
      className="button form__button"
      onlyActiveOnIndex={false}
      style={Object {}}
      to="/server/id"
    >
      Cancel
    </Link>
  </div>
</form>
`;

exports[`EditServerFormConnect should be connected to store 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(Symbol.observable): [Function],
    }
  }
>
  <Connect(ReduxForm)
    serverId="id"
  >
    <ReduxForm
      initialValues={
        Object {
          "name": "name",
          "port": 3000,
        }
      }
      onSubmit={[Function]}
      serverId="id"
    >
      <Connect(Form(Component))
        destroyOnUnmount={true}
        enableReinitialize={false}
        forceUnregisterOnUnmount={false}
        form="editServer"
        getFormState={[Function]}
        initialValues={
          Object {
            "name": "name",
            "port": 3000,
          }
        }
        keepDirtyOnReinitialize={false}
        onSubmit={[Function]}
        persistentSubmitErrors={false}
        pure={true}
        serverId="id"
        shouldAsyncValidate={[Function]}
        shouldValidate={[Function]}
        touchOnBlur={true}
        touchOnChange={false}
      >
        <Form(Component)
          anyTouched={false}
          array={
            Object {
              "insert": [Function],
              "move": [Function],
              "pop": [Function],
              "push": [Function],
              "remove": [Function],
              "removeAll": [Function],
              "shift": [Function],
              "splice": [Function],
              "swap": [Function],
              "unshift": [Function],
            }
          }
          arrayInsert={[Function]}
          arrayMove={[Function]}
          arrayPop={[Function]}
          arrayPush={[Function]}
          arrayRemove={[Function]}
          arrayRemoveAll={[Function]}
          arrayShift={[Function]}
          arraySplice={[Function]}
          arraySwap={[Function]}
          arrayUnshift={[Function]}
          asyncValidating={false}
          autofill={[Function]}
          blur={[Function]}
          change={[Function]}
          clearAsyncError={[Function]}
          clearSubmit={[Function]}
          clearSubmitErrors={[Function]}
          destroy={[Function]}
          destroyOnUnmount={true}
          dirty={false}
          dispatch={[Function]}
          enableReinitialize={false}
          focus={[Function]}
          forceUnregisterOnUnmount={false}
          form="editServer"
          getFormState={[Function]}
          initialValues={
            Object {
              "name": "name",
              "port": 3000,
            }
          }
          initialize={[Function]}
          initialized={true}
          invalid={false}
          keepDirtyOnReinitialize={false}
          onSubmit={[Function]}
          persistentSubmitErrors={false}
          pristine={true}
          pure={true}
          registerField={[Function]}
          registeredFields={
            Object {
              "name": Object {
                "count": 1,
                "name": "name",
                "type": "Field",
              },
              "port": Object {
                "count": 1,
                "name": "port",
                "type": "Field",
              },
            }
          }
          reset={[Function]}
          serverId="id"
          setSubmitFailed={[Function]}
          setSubmitSucceeded={[Function]}
          shouldAsyncValidate={[Function]}
          shouldValidate={[Function]}
          startAsyncValidation={[Function]}
          startSubmit={[Function]}
          stopAsyncValidation={[Function]}
          stopSubmit={[Function]}
          submit={[Function]}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          syncErrors={Object {}}
          syncWarnings={Object {}}
          touch={[Function]}
          touchOnBlur={true}
          touchOnChange={false}
          unregisterField={[Function]}
          untouch={[Function]}
          updateSyncErrors={[Function]}
          updateSyncWarnings={[Function]}
          valid={true}
          validExceptSubmit={true}
          values={
            Object {
              "name": "name",
              "port": 3000,
            }
          }
        >
          <Component
            anyTouched={false}
            array={
              Object {
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "removeAll": [Function],
                "shift": [Function],
                "splice": [Function],
                "swap": [Function],
                "unshift": [Function],
              }
            }
            asyncValidate={[Function]}
            asyncValidating={false}
            autofill={[Function]}
            blur={[Function]}
            change={[Function]}
            clearAsyncError={[Function]}
            clearSubmit={[Function]}
            clearSubmitErrors={[Function]}
            destroy={[Function]}
            dirty={false}
            dispatch={[Function]}
            form="editServer"
            handleSubmit={[Function]}
            initialValues={
              Object {
                "name": "name",
                "port": 3000,
              }
            }
            initialize={[Function]}
            initialized={false}
            invalid={false}
            onSubmit={[Function]}
            pristine={true}
            pure={true}
            reset={[Function]}
            serverId="id"
            submit={[Function]}
            submitFailed={false}
            submitSucceeded={false}
            submitting={false}
            touch={[Function]}
            untouch={[Function]}
            valid={true}
          >
            <form
              action="#"
              className="form"
              onSubmit={[Function]}
            >
              <div
                className="form__header"
              >
                <img
                  alt=""
                  className="form__header-icon"
                  src=""
                />
                Edit server
              </div>
              <div
                className="form-row"
              >
                <div
                  className="form__field"
                >
                  <label
                    className="form-field__label"
                    htmlFor="server-name"
                  >
                    Name:
                  </label>
                  <Field
                    className="form-field__input"
                    component="input"
                    name="name"
                    type="text"
                  >
                    <Connect(ConnectedField)
                      _reduxForm={
                        Object {
                          "anyTouched": false,
                          "array": Object {
                            "insert": [Function],
                            "move": [Function],
                            "pop": [Function],
                            "push": [Function],
                            "remove": [Function],
                            "removeAll": [Function],
                            "shift": [Function],
                            "splice": [Function],
                            "swap": [Function],
                            "unshift": [Function],
                          },
                          "arrayInsert": [Function],
                          "arrayMove": [Function],
                          "arrayPop": [Function],
                          "arrayPush": [Function],
                          "arrayRemove": [Function],
                          "arrayRemoveAll": [Function],
                          "arrayShift": [Function],
                          "arraySplice": [Function],
                          "arraySwap": [Function],
                          "arrayUnshift": [Function],
                          "asyncErrors": undefined,
                          "asyncValidate": [Function],
                          "asyncValidating": false,
                          "autofill": [Function],
                          "blur": [Function],
                          "change": [Function],
                          "clearAsyncError": [Function],
                          "clearSubmit": [Function],
                          "clearSubmitErrors": [Function],
                          "destroy": [Function],
                          "destroyOnUnmount": true,
                          "dirty": false,
                          "dispatch": [Function],
                          "enableReinitialize": false,
                          "error": undefined,
                          "focus": [Function],
                          "forceUnregisterOnUnmount": false,
                          "form": "editServer",
                          "getFormState": [Function],
                          "getValues": [Function],
                          "initialValues": Object {
                            "name": "name",
                            "port": 3000,
                          },
                          "initialize": [Function],
                          "initialized": false,
                          "invalid": false,
                          "keepDirtyOnReinitialize": false,
                          "onSubmit": [Function],
                          "persistentSubmitErrors": false,
                          "pristine": true,
                          "pure": true,
                          "register": [Function],
                          "registerField": [Function],
                          "registerInnerOnSubmit": [Function],
                          "registeredFields": undefined,
                          "reset": [Function],
                          "sectionPrefix": undefined,
                          "serverId": "id",
                          "setSubmitFailed": [Function],
                          "setSubmitSucceeded": [Function],
                          "shouldAsyncValidate": [Function],
                          "shouldValidate": [Function],
                          "startAsyncValidation": [Function],
                          "startSubmit": [Function],
                          "stopAsyncValidation": [Function],
                          "stopSubmit": [Function],
                          "submit": [Function],
                          "submitFailed": false,
                          "submitSucceeded": false,
                          "submitting": false,
                          "syncErrors": Object {},
                          "syncWarnings": Object {},
                          "touch": [Function],
                          "touchOnBlur": true,
                          "touchOnChange": false,
                          "triggerSubmit": undefined,
                          "unregister": [Function],
                          "unregisterField": [Function],
                          "untouch": [Function],
                          "updateSyncErrors": [Function],
                          "updateSyncWarnings": [Function],
                          "valid": true,
                          "validExceptSubmit": true,
                          "values": Object {
                            "name": "name",
                            "port": 3000,
                          },
                          "warning": undefined,
                        }
                      }
                      className="form-field__input"
                      component="input"
                      name="name"
                      normalize={[Function]}
                      type="text"
                    >
                      <ConnectedField
                        _reduxForm={
                          Object {
                            "anyTouched": false,
                            "array": Object {
                              "insert": [Function],
                              "move": [Function],
                              "pop": [Function],
                              "push": [Function],
                              "remove": [Function],
                              "removeAll": [Function],
                              "shift": [Function],
                              "splice": [Function],
                              "swap": [Function],
                              "unshift": [Function],
                            },
                            "arrayInsert": [Function],
                            "arrayMove": [Function],
                            "arrayPop": [Function],
                            "arrayPush": [Function],
                            "arrayRemove": [Function],
                            "arrayRemoveAll": [Function],
                            "arrayShift": [Function],
                            "arraySplice": [Function],
                            "arraySwap": [Function],
                            "arrayUnshift": [Function],
                            "asyncErrors": undefined,
                            "asyncValidate": [Function],
                            "asyncValidating": false,
                            "autofill": [Function],
                            "blur": [Function],
                            "change": [Function],
                            "clearAsyncError": [Function],
                            "clearSubmit": [Function],
                            "clearSubmitErrors": [Function],
                            "destroy": [Function],
                            "destroyOnUnmount": true,
                            "dirty": false,
                            "dispatch": [Function],
                            "enableReinitialize": false,
                            "error": undefined,
                            "focus": [Function],
                            "forceUnregisterOnUnmount": false,
                            "form": "editServer",
                            "getFormState": [Function],
                            "getValues": [Function],
                            "initialValues": Object {
                              "name": "name",
                              "port": 3000,
                            },
                            "initialize": [Function],
                            "initialized": false,
                            "invalid": false,
                            "keepDirtyOnReinitialize": false,
                            "onSubmit": [Function],
                            "persistentSubmitErrors": false,
                            "pristine": true,
                            "pure": true,
                            "register": [Function],
                            "registerField": [Function],
                            "registerInnerOnSubmit": [Function],
                            "registeredFields": undefined,
                            "reset": [Function],
                            "sectionPrefix": undefined,
                            "serverId": "id",
                            "setSubmitFailed": [Function],
                            "setSubmitSucceeded": [Function],
                            "shouldAsyncValidate": [Function],
                            "shouldValidate": [Function],
                            "startAsyncValidation": [Function],
                            "startSubmit": [Function],
                            "stopAsyncValidation": [Function],
                            "stopSubmit": [Function],
                            "submit": [Function],
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "submitting": false,
                            "syncErrors": Object {},
                            "syncWarnings": Object {},
                            "touch": [Function],
                            "touchOnBlur": true,
                            "touchOnChange": false,
                            "triggerSubmit": undefined,
                            "unregister": [Function],
                            "unregisterField": [Function],
                            "untouch": [Function],
                            "updateSyncErrors": [Function],
                            "updateSyncWarnings": [Function],
                            "valid": true,
                            "validExceptSubmit": true,
                            "values": Object {
                              "name": "name",
                              "port": 3000,
                            },
                            "warning": undefined,
                          }
                        }
                        asyncValidating={false}
                        className="form-field__input"
                        component="input"
                        dirty={false}
                        dispatch={[Function]}
                        name="name"
                        normalize={[Function]}
                        pristine={true}
                        type="text"
                        value="name"
                      >
                        <input
                          className="form-field__input"
                          name="name"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onDragStart={[Function]}
                          onDrop={[Function]}
                          onFocus={[Function]}
                          type="text"
                          value="name"
                        />
                      </ConnectedField>
                    </Connect(ConnectedField)>
                  </Field>
                </div>
              </div>
              <div
                className="form-row"
              >
                <div
                  className="form__col"
                >
                  <div
                    className="form__field"
                  >
                    <label
                      className="form-field__label"
                      htmlFor="server-port"
                    >
                      Port:
                    </label>
                    <Field
                      className="form-field__input"
                      component="input"
                      name="port"
                      type="number"
                    >
                      <Connect(ConnectedField)
                        _reduxForm={
                          Object {
                            "anyTouched": false,
                            "array": Object {
                              "insert": [Function],
                              "move": [Function],
                              "pop": [Function],
                              "push": [Function],
                              "remove": [Function],
                              "removeAll": [Function],
                              "shift": [Function],
                              "splice": [Function],
                              "swap": [Function],
                              "unshift": [Function],
                            },
                            "arrayInsert": [Function],
                            "arrayMove": [Function],
                            "arrayPop": [Function],
                            "arrayPush": [Function],
                            "arrayRemove": [Function],
                            "arrayRemoveAll": [Function],
                            "arrayShift": [Function],
                            "arraySplice": [Function],
                            "arraySwap": [Function],
                            "arrayUnshift": [Function],
                            "asyncErrors": undefined,
                            "asyncValidate": [Function],
                            "asyncValidating": false,
                            "autofill": [Function],
                            "blur": [Function],
                            "change": [Function],
                            "clearAsyncError": [Function],
                            "clearSubmit": [Function],
                            "clearSubmitErrors": [Function],
                            "destroy": [Function],
                            "destroyOnUnmount": true,
                            "dirty": false,
                            "dispatch": [Function],
                            "enableReinitialize": false,
                            "error": undefined,
                            "focus": [Function],
                            "forceUnregisterOnUnmount": false,
                            "form": "editServer",
                            "getFormState": [Function],
                            "getValues": [Function],
                            "initialValues": Object {
                              "name": "name",
                              "port": 3000,
                            },
                            "initialize": [Function],
                            "initialized": false,
                            "invalid": false,
                            "keepDirtyOnReinitialize": false,
                            "onSubmit": [Function],
                            "persistentSubmitErrors": false,
                            "pristine": true,
                            "pure": true,
                            "register": [Function],
                            "registerField": [Function],
                            "registerInnerOnSubmit": [Function],
                            "registeredFields": undefined,
                            "reset": [Function],
                            "sectionPrefix": undefined,
                            "serverId": "id",
                            "setSubmitFailed": [Function],
                            "setSubmitSucceeded": [Function],
                            "shouldAsyncValidate": [Function],
                            "shouldValidate": [Function],
                            "startAsyncValidation": [Function],
                            "startSubmit": [Function],
                            "stopAsyncValidation": [Function],
                            "stopSubmit": [Function],
                            "submit": [Function],
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "submitting": false,
                            "syncErrors": Object {},
                            "syncWarnings": Object {},
                            "touch": [Function],
                            "touchOnBlur": true,
                            "touchOnChange": false,
                            "triggerSubmit": undefined,
                            "unregister": [Function],
                            "unregisterField": [Function],
                            "untouch": [Function],
                            "updateSyncErrors": [Function],
                            "updateSyncWarnings": [Function],
                            "valid": true,
                            "validExceptSubmit": true,
                            "values": Object {
                              "name": "name",
                              "port": 3000,
                            },
                            "warning": undefined,
                          }
                        }
                        className="form-field__input"
                        component="input"
                        name="port"
                        normalize={[Function]}
                        type="number"
                      >
                        <ConnectedField
                          _reduxForm={
                            Object {
                              "anyTouched": false,
                              "array": Object {
                                "insert": [Function],
                                "move": [Function],
                                "pop": [Function],
                                "push": [Function],
                                "remove": [Function],
                                "removeAll": [Function],
                                "shift": [Function],
                                "splice": [Function],
                                "swap": [Function],
                                "unshift": [Function],
                              },
                              "arrayInsert": [Function],
                              "arrayMove": [Function],
                              "arrayPop": [Function],
                              "arrayPush": [Function],
                              "arrayRemove": [Function],
                              "arrayRemoveAll": [Function],
                              "arrayShift": [Function],
                              "arraySplice": [Function],
                              "arraySwap": [Function],
                              "arrayUnshift": [Function],
                              "asyncErrors": undefined,
                              "asyncValidate": [Function],
                              "asyncValidating": false,
                              "autofill": [Function],
                              "blur": [Function],
                              "change": [Function],
                              "clearAsyncError": [Function],
                              "clearSubmit": [Function],
                              "clearSubmitErrors": [Function],
                              "destroy": [Function],
                              "destroyOnUnmount": true,
                              "dirty": false,
                              "dispatch": [Function],
                              "enableReinitialize": false,
                              "error": undefined,
                              "focus": [Function],
                              "forceUnregisterOnUnmount": false,
                              "form": "editServer",
                              "getFormState": [Function],
                              "getValues": [Function],
                              "initialValues": Object {
                                "name": "name",
                                "port": 3000,
                              },
                              "initialize": [Function],
                              "initialized": false,
                              "invalid": false,
                              "keepDirtyOnReinitialize": false,
                              "onSubmit": [Function],
                              "persistentSubmitErrors": false,
                              "pristine": true,
                              "pure": true,
                              "register": [Function],
                              "registerField": [Function],
                              "registerInnerOnSubmit": [Function],
                              "registeredFields": undefined,
                              "reset": [Function],
                              "sectionPrefix": undefined,
                              "serverId": "id",
                              "setSubmitFailed": [Function],
                              "setSubmitSucceeded": [Function],
                              "shouldAsyncValidate": [Function],
                              "shouldValidate": [Function],
                              "startAsyncValidation": [Function],
                              "startSubmit": [Function],
                              "stopAsyncValidation": [Function],
                              "stopSubmit": [Function],
                              "submit": [Function],
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "submitting": false,
                              "syncErrors": Object {},
                              "syncWarnings": Object {},
                              "touch": [Function],
                              "touchOnBlur": true,
                              "touchOnChange": false,
                              "triggerSubmit": undefined,
                              "unregister": [Function],
                              "unregisterField": [Function],
                              "untouch": [Function],
                              "updateSyncErrors": [Function],
                              "updateSyncWarnings": [Function],
                              "valid": true,
                              "validExceptSubmit": true,
                              "values": Object {
                                "name": "name",
                                "port": 3000,
                              },
                              "warning": undefined,
                            }
                          }
                          asyncValidating={false}
                          className="form-field__input"
                          component="input"
                          dirty={false}
                          dispatch={[Function]}
                          name="port"
                          normalize={[Function]}
                          pristine={true}
                          type="number"
                          value={3000}
                        >
                          <input
                            className="form-field__input"
                            name="port"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onDragStart={[Function]}
                            onDrop={[Function]}
                            onFocus={[Function]}
                            type="number"
                            value={3000}
                          />
                        </ConnectedField>
                      </Connect(ConnectedField)>
                    </Field>
                  </div>
                </div>
              </div>
              <div
                className="form-row"
              >
                <button
                  className="button form__button"
                  type="submit"
                >
                  Save
                </button>
                <Link
                  className="button form__button"
                  onlyActiveOnIndex={false}
                  style={Object {}}
                  to="/server/id"
                >
                  <a
                    className="button form__button"
                    onClick={[Function]}
                    style={Object {}}
                  >
                    Cancel
                  </a>
                </Link>
              </div>
            </form>
          </Component>
        </Form(Component)>
      </Connect(Form(Component))>
    </ReduxForm>
  </Connect(ReduxForm)>
</Provider>
`;

exports[`EditServerPage default snapshot 1`] = `
<div
  className="edit-server-page"
>
  <Scrollbars
    autoHeight={false}
    autoHeightMax={200}
    autoHeightMin={0}
    autoHide={false}
    autoHideDuration={200}
    autoHideTimeout={1000}
    hideTracksWhenNotNeeded={false}
    renderThumbHorizontal={[Function]}
    renderThumbVertical={[Function]}
    renderTrackHorizontal={[Function]}
    renderTrackVertical={[Function]}
    renderView={[Function]}
    tagName="div"
    thumbMinSize={30}
    universal={false}
  >
    <div
      className="edit-server-page__form"
    >
      <Connect(ReduxForm)
        serverId="id"
      />
    </div>
  </Scrollbars>
</div>
`;
